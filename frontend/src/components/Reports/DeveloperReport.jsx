import React from 'react';
import jsPDF from 'jspdf';
import 'jspdf-autotable';
import SweetAlert from '../Common/SweetAlert';
import styles from '../../pages/Developer/Developer.module.css';

const DeveloperReport = ({ interns = [] }) => {
  const generateReport = async () => {
    try {
      const doc = new jsPDF('landscape', 'mm', 'a4');

      const tableColumn = [
        'No',
        'Intern Code',
        'Name',
        'Email',
        'Mobile',
        'End Date',
        'Tech Stack',
        'Projects',
      ];

      const tableRows = interns.map((intern, idx) => [
        idx + 1,
        intern.internCode || '-',
        intern.name || '-',
        intern.email || '-',
        intern.mobileNumber || '-',
        intern.trainingEndDate ? new Date(intern.trainingEndDate).toLocaleDateString('en-US', { 
          year: 'numeric', 
          month: 'short', 
          day: 'numeric' 
        }) : '-',
        Array.isArray(intern.languagesAndFrameworks) ? intern.languagesAndFrameworks.join(', ') : (intern.languagesAndFrameworks || '-'),
        Array.isArray(intern.projects) ? intern.projects.join(', ') : (intern.projects || '-'),
      ]);

      const now = new Date();
      const headerDate = now.toLocaleDateString('en-US', { 
        weekday: 'long',
        year: 'numeric', 
        month: 'long', 
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      });
      const fileDate = now.toISOString().slice(0, 10);

      // Company/System Header with gradient effect
      doc.setFillColor(59, 130, 246); // Blue gradient start
      doc.rect(0, 0, 297, 35, 'F');
      
      doc.setTextColor(255, 255, 255);
      doc.setFontSize(28);
      doc.setFont('helvetica', 'bold');
      doc.text('TalentTrail', 148.5, 15, { align: 'center' });
      
      doc.setFontSize(16);
      doc.setFont('helvetica', 'normal');
      doc.text('Developer Interns Report', 148.5, 24, { align: 'center' });

      // Report metadata section
      doc.setFillColor(248, 250, 252);
      doc.rect(0, 35, 297, 15, 'F');
      
      doc.setTextColor(71, 85, 105);
      doc.setFontSize(9);
      doc.setFont('helvetica', 'normal');
      doc.text(`Report Generated: ${headerDate}`, 15, 42);
      doc.text(`Total Interns: ${interns.length}`, 15, 47);
      
      doc.setFont('helvetica', 'italic');
      doc.text('Intern Management System', 282, 44.5, { align: 'right' });

      // Decorative line
      doc.setDrawColor(59, 130, 246);
      doc.setLineWidth(0.5);
      doc.line(15, 52, 282, 52);

      // Table with professional styling
      doc.autoTable({
        head: [tableColumn],
        body: tableRows,
        startY: 58,
        theme: 'grid',
        styles: { 
          fontSize: 9,
          cellPadding: 4,
          lineColor: [226, 232, 240],
          lineWidth: 0.1,
          font: 'helvetica',
          textColor: [51, 65, 85],
        },
        headStyles: { 
          fillColor: [59, 130, 246],
          textColor: [255, 255, 255],
          fontStyle: 'bold',
          halign: 'center',
          fontSize: 10,
          cellPadding: 5,
        },
        alternateRowStyles: {
          fillColor: [248, 250, 252],
        },
        columnStyles: {
          0: { halign: 'center', cellWidth: 12 },
          1: { halign: 'center', cellWidth: 25 },
          2: { cellWidth: 35 },
          3: { cellWidth: 50 },
          4: { halign: 'center', cellWidth: 28 },
          5: { halign: 'center', cellWidth: 28 },
          6: { cellWidth: 50 },
          7: { cellWidth: 50 },
        },
        margin: { left: 15, right: 15 },
        didDrawPage: (data) => {
          // Footer on each page
          const pageCount = doc.internal.getNumberOfPages();
          const pageSize = doc.internal.pageSize;
          const pageHeight = pageSize.height || pageSize.getHeight();
          
          doc.setFontSize(8);
          doc.setTextColor(148, 163, 184);
          doc.setFont('helvetica', 'italic');
          
          // Page number
          doc.text(
            `Page ${data.pageNumber} of ${pageCount}`,
            pageSize.width / 2,
            pageHeight - 10,
            { align: 'center' }
          );
          
          // Footer text
          doc.text(
            'Â© 2025 TalentTrail - Confidential',
            15,
            pageHeight - 10
          );
          
          doc.text(
            'Generated by TalentTrail System',
            282,
            pageHeight - 10,
            { align: 'right' }
          );
        },
      });

      doc.save(`Developer-Interns-Report_${fileDate}.pdf`);

      await SweetAlert.alert({
        title: 'Report generated',
        text: 'The Developer interns report was generated and downloaded.',
        icon: 'success',
        confirmButtonText: 'OK'
      });
    } catch (err) {
      console.error('Error generating Developer report', err);
      await SweetAlert.alert({
        title: 'Error',
        text: 'Failed to generate report. Check console for details.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
    }
  };

  return (
    <button
      type="button"
      className={styles.primaryBtn}
      onClick={generateReport}
    >
      Generate Report
    </button>
  );
};

export default DeveloperReport;
